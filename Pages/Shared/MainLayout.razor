@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Identity
@using hephaestus.Models;
@using hephaestus.Services
@using System.Security.Claims
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject AuthStateService AuthStateService

<div class="sidebar">
</div>

<div class="main">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="navbar-brand">Hephaestus</div>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
                <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
            </li>
            <AuthorizeView>
                <Authorized>
                    <li class="nav-item">
                        <a class="nav-link" href="/">Welcome,  @context.User.Identity.Name!<span class="sr-only">(current)</span></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/" @onclick="LogOut">Logout<span class="sr-only">(current)</span></a>
                    </li>
                </Authorized>
                <NotAuthorized>
                    <li class="nav-item">
                        <a href="/account/register" class="nav-link">Register</a>
                    </li>
                    <li class="nav-item">
                        <a href="/account/login" class="nav-link">Login</a>
                    </li>
                </NotAuthorized>
            </AuthorizeView>
        </ul>
    </div>
    </nav>

    <div class="content px-4">
        @Body
    </div>

    @code {
        private async Task LogOut()
        {
            await localStorage.RemoveItemAsync("token");
            var anonymousUser = new ClaimsPrincipal(new ClaimsIdentity());
            AuthStateService.SetAuthenticationState(Task.FromResult(new AuthenticationState(anonymousUser)));
            AuthStateService.NotifyStateChanged();
        }
    }

</div>
